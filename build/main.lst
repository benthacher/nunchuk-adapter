ARM GAS  /tmp/ccuGbnkP.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.indicate_nunchuk_type,"ax",%progbits
  19              		.align	1
  20              		.global	indicate_nunchuk_type
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	indicate_nunchuk_type:
  26              	.LVL0:
  27              	.LFB364:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "usb_device.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "nunchuk.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccuGbnkP.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** typedef enum _DeviceState {
  35:Core/Src/main.c ****   WAITING,
  36:Core/Src/main.c ****   PRESENCE_DETECTED,
  37:Core/Src/main.c ****   CONNECTED
  38:Core/Src/main.c **** } DeviceState;
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** DeviceState dev_state;
  56:Core/Src/main.c **** nunchuk_device_type_t nunchuk_type;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** void indicate_nunchuk_type(nunchuk_device_type_t type);
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
  76:Core/Src/main.c **** {
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.c ****   dev_state = WAITING;
  79:Core/Src/main.c ****   nunchuk_type = UNKNOWN;
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccuGbnkP.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_I2C2_Init();
 101:Core/Src/main.c ****   MX_USB_Device_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     switch (dev_state) {
 112:Core/Src/main.c ****       case WAITING: {
 113:Core/Src/main.c ****         write_led(0);
 114:Core/Src/main.c ****         if (read_pres_pin()) {
 115:Core/Src/main.c ****           dev_state = PRESENCE_DETECTED;
 116:Core/Src/main.c ****         }
 117:Core/Src/main.c ****       }
 118:Core/Src/main.c ****       break;
 119:Core/Src/main.c ****       case PRESENCE_DETECTED: {
 120:Core/Src/main.c ****         // debounce
 121:Core/Src/main.c ****         blink_led(1, 100);
 122:Core/Src/main.c ****         HAL_Delay(100);
 123:Core/Src/main.c ****         blink_led(1, 100);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****         if (read_pres_pin()) {
 126:Core/Src/main.c ****           // we still have something connected so try and initialize it
 127:Core/Src/main.c ****           HAL_StatusTypeDef status = nunchuk_init(&nunchuk_type); // try to initialize the nunchuk
 128:Core/Src/main.c ****         
 129:Core/Src/main.c ****           if (status == HAL_OK) {
 130:Core/Src/main.c ****             indicate_nunchuk_type(nunchuk_type);
 131:Core/Src/main.c ****             dev_state = CONNECTED;
 132:Core/Src/main.c ****           }
 133:Core/Src/main.c ****         } else {
 134:Core/Src/main.c ****           // nothing is connected, it was a fluke or something
 135:Core/Src/main.c ****           dev_state = WAITING;
 136:Core/Src/main.c ****         }
 137:Core/Src/main.c ****       }
 138:Core/Src/main.c ****       break;
 139:Core/Src/main.c ****       case CONNECTED: {
 140:Core/Src/main.c ****         write_led(1);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****         // if we're connected but the presence pin goes low then we disconnected
 143:Core/Src/main.c ****         if (!read_pres_pin()) {
 144:Core/Src/main.c ****           dev_state = WAITING;
 145:Core/Src/main.c ****           nunchuk_type = UNKNOWN;
ARM GAS  /tmp/ccuGbnkP.s 			page 4


 146:Core/Src/main.c ****         }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****         switch (nunchuk_type) {
 149:Core/Src/main.c ****           case STANDARD: {
 150:Core/Src/main.c ****             nunchuk_standard_t report;
 151:Core/Src/main.c ****             nunchuk_read_standard(&report);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****             // standard report -> usb hid gamepad report
 154:Core/Src/main.c ****             // usb hid send report
 155:Core/Src/main.c ****           }
 156:Core/Src/main.c ****           break;
 157:Core/Src/main.c ****           case CLASSIC: {
 158:Core/Src/main.c ****             nunchuk_classic_t report;
 159:Core/Src/main.c ****             nunchuk_read_classic(&report);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****             // classic report -> usb hid gamepad report
 162:Core/Src/main.c ****             // usb hid send report
 163:Core/Src/main.c ****           }
 164:Core/Src/main.c ****           break;
 165:Core/Src/main.c ****           case GUITAR_HERO: {
 166:Core/Src/main.c ****             nunchuk_guitar_hero_t report;
 167:Core/Src/main.c ****             nunchuk_read_guitar_hero(&report);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****             // guitar hero report -> usb hid gamepad report
 170:Core/Src/main.c ****             // usb hid send report
 171:Core/Src/main.c ****             int a = 0;
 172:Core/Src/main.c ****           }
 173:Core/Src/main.c ****           break;
 174:Core/Src/main.c ****           case UNKNOWN:
 175:Core/Src/main.c ****           default:
 176:Core/Src/main.c ****             // zero out usb hid report
 177:Core/Src/main.c ****             // send it
 178:Core/Src/main.c ****             break;
 179:Core/Src/main.c ****         }
 180:Core/Src/main.c ****       }
 181:Core/Src/main.c ****       break;
 182:Core/Src/main.c ****     }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     HAL_Delay(10);
 185:Core/Src/main.c ****     /* USER CODE END WHILE */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   /* USER CODE END 3 */
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief System Clock Configuration
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** void SystemClock_Config(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 199:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 200:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
ARM GAS  /tmp/ccuGbnkP.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 205:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 206:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI48;
 209:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 210:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 227:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 228:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 229:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 230:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /** Initializes the peripherals clocks
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2|RCC_PERIPHCLK_USB;
 239:Core/Src/main.c ****   PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 240:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 241:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 248:Core/Src/main.c **** void indicate_nunchuk_type(nunchuk_device_type_t type) {
  28              		.loc 1 248 56 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 248 56 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 249:Core/Src/main.c ****   const int blink_freq = 10;
ARM GAS  /tmp/ccuGbnkP.s 			page 6


  38              		.loc 1 249 3 is_stmt 1 view .LVU2
  39              	.LVL1:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   switch (type) {
  40              		.loc 1 251 3 view .LVU3
  41 0002 0228     		cmp	r0, #2
  42 0004 11D0     		beq	.L2
  43 0006 0328     		cmp	r0, #3
  44 0008 0AD0     		beq	.L3
  45 000a 0128     		cmp	r0, #1
  46 000c 04D0     		beq	.L6
 252:Core/Src/main.c ****     case STANDARD:
 253:Core/Src/main.c ****       blink_led(1, blink_freq);
 254:Core/Src/main.c ****       break;
 255:Core/Src/main.c ****     case CLASSIC:
 256:Core/Src/main.c ****       blink_led(2, blink_freq);
 257:Core/Src/main.c ****       break;
 258:Core/Src/main.c ****     case GUITAR_HERO:
 259:Core/Src/main.c ****       blink_led(3, blink_freq);
 260:Core/Src/main.c ****       break;
 261:Core/Src/main.c ****     case UNKNOWN:
 262:Core/Src/main.c ****     default:
 263:Core/Src/main.c ****       blink_led(10, blink_freq);
  47              		.loc 1 263 7 view .LVU4
  48 000e 0A21     		movs	r1, #10
  49 0010 0A20     		movs	r0, #10
  50              	.LVL2:
  51              		.loc 1 263 7 is_stmt 0 view .LVU5
  52 0012 FFF7FEFF 		bl	blink_led
  53              	.LVL3:
 264:Core/Src/main.c ****       break;
  54              		.loc 1 264 7 is_stmt 1 view .LVU6
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c **** }
  55              		.loc 1 266 1 is_stmt 0 view .LVU7
  56 0016 02E0     		b	.L1
  57              	.LVL4:
  58              	.L6:
 253:Core/Src/main.c ****       break;
  59              		.loc 1 253 7 is_stmt 1 view .LVU8
  60 0018 0A21     		movs	r1, #10
  61 001a FFF7FEFF 		bl	blink_led
  62              	.LVL5:
 254:Core/Src/main.c ****     case CLASSIC:
  63              		.loc 1 254 7 view .LVU9
  64              	.L1:
  65              		.loc 1 266 1 is_stmt 0 view .LVU10
  66              		@ sp needed
  67 001e 10BD     		pop	{r4, pc}
  68              	.LVL6:
  69              	.L3:
 256:Core/Src/main.c ****       break;
  70              		.loc 1 256 7 is_stmt 1 view .LVU11
  71 0020 0A21     		movs	r1, #10
  72 0022 0220     		movs	r0, #2
  73              	.LVL7:
 256:Core/Src/main.c ****       break;
ARM GAS  /tmp/ccuGbnkP.s 			page 7


  74              		.loc 1 256 7 is_stmt 0 view .LVU12
  75 0024 FFF7FEFF 		bl	blink_led
  76              	.LVL8:
 257:Core/Src/main.c ****     case GUITAR_HERO:
  77              		.loc 1 257 7 is_stmt 1 view .LVU13
  78 0028 F9E7     		b	.L1
  79              	.LVL9:
  80              	.L2:
 259:Core/Src/main.c ****       break;
  81              		.loc 1 259 7 view .LVU14
  82 002a 0A21     		movs	r1, #10
  83 002c 0320     		movs	r0, #3
  84              	.LVL10:
 259:Core/Src/main.c ****       break;
  85              		.loc 1 259 7 is_stmt 0 view .LVU15
  86 002e FFF7FEFF 		bl	blink_led
  87              	.LVL11:
 260:Core/Src/main.c ****     case UNKNOWN:
  88              		.loc 1 260 7 is_stmt 1 view .LVU16
  89 0032 F4E7     		b	.L1
  90              		.cfi_endproc
  91              	.LFE364:
  93              		.section	.text.Error_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	Error_Handler
  96              		.syntax unified
  97              		.code	16
  98              		.thumb_func
 100              	Error_Handler:
 101              	.LFB365:
 267:Core/Src/main.c **** /* USER CODE END 4 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /**
 270:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** void Error_Handler(void)
 274:Core/Src/main.c **** {
 102              		.loc 1 274 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 275:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 276:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 277:Core/Src/main.c ****   __disable_irq();
 108              		.loc 1 277 3 view .LVU18
 109              	.LBB4:
 110              	.LBI4:
 111              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/ccuGbnkP.s 			page 8


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccuGbnkP.s 			page 9


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
ARM GAS  /tmp/ccuGbnkP.s 			page 10


 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
ARM GAS  /tmp/ccuGbnkP.s 			page 11


 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 112              		.loc 2 207 27 view .LVU19
 113              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 114              		.loc 2 209 3 view .LVU20
 115              		.syntax divided
 116              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 117 0000 72B6     		cpsid i
 118              	@ 0 "" 2
 119              		.thumb
 120              		.syntax unified
 121              	.L8:
 122              	.LBE5:
 123              	.LBE4:
 278:Core/Src/main.c ****   while (1)
 124              		.loc 1 278 3 discriminator 1 view .LVU21
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****   }
 125              		.loc 1 280 3 discriminator 1 view .LVU22
 278:Core/Src/main.c ****   while (1)
 126              		.loc 1 278 9 discriminator 1 view .LVU23
 127 0002 FEE7     		b	.L8
 128              		.cfi_endproc
 129              	.LFE365:
 131              		.section	.text.SystemClock_Config,"ax",%progbits
 132              		.align	1
 133              		.global	SystemClock_Config
ARM GAS  /tmp/ccuGbnkP.s 			page 12


 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 138              	SystemClock_Config:
 139              	.LFB363:
 197:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 140              		.loc 1 197 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 152
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 00B5     		push	{lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 14, -4
 148 0002 A7B0     		sub	sp, sp, #156
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 160
 198:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 151              		.loc 1 198 3 view .LVU25
 198:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152              		.loc 1 198 22 is_stmt 0 view .LVU26
 153 0004 3C22     		movs	r2, #60
 154 0006 0021     		movs	r1, #0
 155 0008 17A8     		add	r0, sp, #92
 156 000a FFF7FEFF 		bl	memset
 157              	.LVL12:
 199:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 158              		.loc 1 199 3 is_stmt 1 view .LVU27
 199:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 159              		.loc 1 199 22 is_stmt 0 view .LVU28
 160 000e 1022     		movs	r2, #16
 161 0010 0021     		movs	r1, #0
 162 0012 13A8     		add	r0, sp, #76
 163 0014 FFF7FEFF 		bl	memset
 164              	.LVL13:
 200:Core/Src/main.c **** 
 165              		.loc 1 200 3 is_stmt 1 view .LVU29
 200:Core/Src/main.c **** 
 166              		.loc 1 200 28 is_stmt 0 view .LVU30
 167 0018 4C22     		movs	r2, #76
 168 001a 0021     		movs	r1, #0
 169 001c 6846     		mov	r0, sp
 170 001e FFF7FEFF 		bl	memset
 171              	.LVL14:
 204:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172              		.loc 1 204 3 is_stmt 1 view .LVU31
 173 0022 8020     		movs	r0, #128
 174 0024 8000     		lsls	r0, r0, #2
 175 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 176              	.LVL15:
 208:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177              		.loc 1 208 3 view .LVU32
 208:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178              		.loc 1 208 36 is_stmt 0 view .LVU33
 179 002a 2223     		movs	r3, #34
 180 002c 1793     		str	r3, [sp, #92]
 209:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
ARM GAS  /tmp/ccuGbnkP.s 			page 13


 181              		.loc 1 209 3 is_stmt 1 view .LVU34
 209:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 182              		.loc 1 209 30 is_stmt 0 view .LVU35
 183 002e DE33     		adds	r3, r3, #222
 184 0030 1A93     		str	r3, [sp, #104]
 210:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 185              		.loc 1 210 3 is_stmt 1 view .LVU36
 210:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 186              		.loc 1 210 32 is_stmt 0 view .LVU37
 187 0032 8023     		movs	r3, #128
 188 0034 DB03     		lsls	r3, r3, #15
 189 0036 1E93     		str	r3, [sp, #120]
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 190              		.loc 1 211 3 is_stmt 1 view .LVU38
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 191              		.loc 1 211 28 is_stmt 0 view .LVU39
 192 0038 0023     		movs	r3, #0
 193 003a 1B93     		str	r3, [sp, #108]
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 194              		.loc 1 212 3 is_stmt 1 view .LVU40
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195              		.loc 1 212 41 is_stmt 0 view .LVU41
 196 003c 4022     		movs	r2, #64
 197 003e 1C92     		str	r2, [sp, #112]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 198              		.loc 1 213 3 is_stmt 1 view .LVU42
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 199              		.loc 1 213 34 is_stmt 0 view .LVU43
 200 0040 3E3A     		subs	r2, r2, #62
 201 0042 1F92     		str	r2, [sp, #124]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 202              		.loc 1 214 3 is_stmt 1 view .LVU44
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 203              		.loc 1 214 35 is_stmt 0 view .LVU45
 204 0044 2092     		str	r2, [sp, #128]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 205              		.loc 1 215 3 is_stmt 1 view .LVU46
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 206              		.loc 1 215 30 is_stmt 0 view .LVU47
 207 0046 2193     		str	r3, [sp, #132]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 208              		.loc 1 216 3 is_stmt 1 view .LVU48
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 209              		.loc 1 216 30 is_stmt 0 view .LVU49
 210 0048 0833     		adds	r3, r3, #8
 211 004a 2293     		str	r3, [sp, #136]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 212              		.loc 1 217 3 is_stmt 1 view .LVU50
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 213              		.loc 1 217 30 is_stmt 0 view .LVU51
 214 004c 8023     		movs	r3, #128
 215 004e 9B02     		lsls	r3, r3, #10
 216 0050 2393     		str	r3, [sp, #140]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 217              		.loc 1 218 3 is_stmt 1 view .LVU52
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 218              		.loc 1 218 30 is_stmt 0 view .LVU53
ARM GAS  /tmp/ccuGbnkP.s 			page 14


 219 0052 8023     		movs	r3, #128
 220 0054 9B04     		lsls	r3, r3, #18
 221 0056 2493     		str	r3, [sp, #144]
 219:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 222              		.loc 1 219 3 is_stmt 1 view .LVU54
 219:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223              		.loc 1 219 30 is_stmt 0 view .LVU55
 224 0058 8023     		movs	r3, #128
 225 005a 9B05     		lsls	r3, r3, #22
 226 005c 2593     		str	r3, [sp, #148]
 220:Core/Src/main.c ****   {
 227              		.loc 1 220 3 is_stmt 1 view .LVU56
 220:Core/Src/main.c ****   {
 228              		.loc 1 220 7 is_stmt 0 view .LVU57
 229 005e 17A8     		add	r0, sp, #92
 230 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 231              	.LVL16:
 220:Core/Src/main.c ****   {
 232              		.loc 1 220 6 view .LVU58
 233 0064 0028     		cmp	r0, #0
 234 0066 18D1     		bne	.L13
 226:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 235              		.loc 1 226 3 is_stmt 1 view .LVU59
 226:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 236              		.loc 1 226 31 is_stmt 0 view .LVU60
 237 0068 0723     		movs	r3, #7
 238 006a 1393     		str	r3, [sp, #76]
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 239              		.loc 1 228 3 is_stmt 1 view .LVU61
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 240              		.loc 1 228 34 is_stmt 0 view .LVU62
 241 006c 053B     		subs	r3, r3, #5
 242 006e 1493     		str	r3, [sp, #80]
 229:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 243              		.loc 1 229 3 is_stmt 1 view .LVU63
 229:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 244              		.loc 1 229 35 is_stmt 0 view .LVU64
 245 0070 0023     		movs	r3, #0
 246 0072 1593     		str	r3, [sp, #84]
 230:Core/Src/main.c **** 
 247              		.loc 1 230 3 is_stmt 1 view .LVU65
 230:Core/Src/main.c **** 
 248              		.loc 1 230 36 is_stmt 0 view .LVU66
 249 0074 1693     		str	r3, [sp, #88]
 232:Core/Src/main.c ****   {
 250              		.loc 1 232 3 is_stmt 1 view .LVU67
 232:Core/Src/main.c ****   {
 251              		.loc 1 232 7 is_stmt 0 view .LVU68
 252 0076 0221     		movs	r1, #2
 253 0078 13A8     		add	r0, sp, #76
 254 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 255              	.LVL17:
 232:Core/Src/main.c ****   {
 256              		.loc 1 232 6 view .LVU69
 257 007e 0028     		cmp	r0, #0
 258 0080 0DD1     		bne	.L14
 238:Core/Src/main.c ****   PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
ARM GAS  /tmp/ccuGbnkP.s 			page 15


 259              		.loc 1 238 3 is_stmt 1 view .LVU70
 238:Core/Src/main.c ****   PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 260              		.loc 1 238 38 is_stmt 0 view .LVU71
 261 0082 094B     		ldr	r3, .L16
 262 0084 0093     		str	r3, [sp]
 239:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 263              		.loc 1 239 3 is_stmt 1 view .LVU72
 239:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 264              		.loc 1 239 36 is_stmt 0 view .LVU73
 265 0086 0023     		movs	r3, #0
 266 0088 0793     		str	r3, [sp, #28]
 240:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 267              		.loc 1 240 3 is_stmt 1 view .LVU74
 240:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 268              		.loc 1 240 35 is_stmt 0 view .LVU75
 269 008a 1193     		str	r3, [sp, #68]
 241:Core/Src/main.c ****   {
 270              		.loc 1 241 3 is_stmt 1 view .LVU76
 241:Core/Src/main.c ****   {
 271              		.loc 1 241 7 is_stmt 0 view .LVU77
 272 008c 6846     		mov	r0, sp
 273 008e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 274              	.LVL18:
 241:Core/Src/main.c ****   {
 275              		.loc 1 241 6 view .LVU78
 276 0092 0028     		cmp	r0, #0
 277 0094 05D1     		bne	.L15
 245:Core/Src/main.c **** 
 278              		.loc 1 245 1 view .LVU79
 279 0096 27B0     		add	sp, sp, #156
 280              		@ sp needed
 281 0098 00BD     		pop	{pc}
 282              	.L13:
 222:Core/Src/main.c ****   }
 283              		.loc 1 222 5 is_stmt 1 view .LVU80
 284 009a FFF7FEFF 		bl	Error_Handler
 285              	.LVL19:
 286              	.L14:
 234:Core/Src/main.c ****   }
 287              		.loc 1 234 5 view .LVU81
 288 009e FFF7FEFF 		bl	Error_Handler
 289              	.LVL20:
 290              	.L15:
 243:Core/Src/main.c ****   }
 291              		.loc 1 243 5 view .LVU82
 292 00a2 FFF7FEFF 		bl	Error_Handler
 293              	.LVL21:
 294              	.L17:
 295 00a6 C046     		.align	2
 296              	.L16:
 297 00a8 40000001 		.word	16777280
 298              		.cfi_endproc
 299              	.LFE363:
 301              		.section	.text.main,"ax",%progbits
 302              		.align	1
 303              		.global	main
 304              		.syntax unified
ARM GAS  /tmp/ccuGbnkP.s 			page 16


 305              		.code	16
 306              		.thumb_func
 308              	main:
 309              	.LFB362:
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 310              		.loc 1 76 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 24
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 00B5     		push	{lr}
 315              	.LCFI3:
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 14, -4
 318 0002 87B0     		sub	sp, sp, #28
 319              	.LCFI4:
 320              		.cfi_def_cfa_offset 32
  78:Core/Src/main.c ****   nunchuk_type = UNKNOWN;
 321              		.loc 1 78 3 view .LVU84
  78:Core/Src/main.c ****   nunchuk_type = UNKNOWN;
 322              		.loc 1 78 13 is_stmt 0 view .LVU85
 323 0004 324B     		ldr	r3, .L28
 324 0006 0022     		movs	r2, #0
 325 0008 1A70     		strb	r2, [r3]
  79:Core/Src/main.c ****   /* USER CODE END 1 */
 326              		.loc 1 79 3 is_stmt 1 view .LVU86
  79:Core/Src/main.c ****   /* USER CODE END 1 */
 327              		.loc 1 79 16 is_stmt 0 view .LVU87
 328 000a 324B     		ldr	r3, .L28+4
 329 000c 1A70     		strb	r2, [r3]
  85:Core/Src/main.c **** 
 330              		.loc 1 85 3 is_stmt 1 view .LVU88
 331 000e FFF7FEFF 		bl	HAL_Init
 332              	.LVL22:
  92:Core/Src/main.c **** 
 333              		.loc 1 92 3 view .LVU89
 334 0012 FFF7FEFF 		bl	SystemClock_Config
 335              	.LVL23:
  99:Core/Src/main.c ****   MX_I2C2_Init();
 336              		.loc 1 99 3 view .LVU90
 337 0016 FFF7FEFF 		bl	MX_GPIO_Init
 338              	.LVL24:
 100:Core/Src/main.c ****   MX_USB_Device_Init();
 339              		.loc 1 100 3 view .LVU91
 340 001a FFF7FEFF 		bl	MX_I2C2_Init
 341              	.LVL25:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 342              		.loc 1 101 3 view .LVU92
 343 001e FFF7FEFF 		bl	MX_USB_Device_Init
 344              	.LVL26:
 345 0022 14E0     		b	.L26
 346              	.L19:
 121:Core/Src/main.c ****         HAL_Delay(100);
 347              		.loc 1 121 9 view .LVU93
 348 0024 6421     		movs	r1, #100
 349 0026 0120     		movs	r0, #1
 350 0028 FFF7FEFF 		bl	blink_led
 351              	.LVL27:
ARM GAS  /tmp/ccuGbnkP.s 			page 17


 122:Core/Src/main.c ****         blink_led(1, 100);
 352              		.loc 1 122 9 view .LVU94
 353 002c 6420     		movs	r0, #100
 354 002e FFF7FEFF 		bl	HAL_Delay
 355              	.LVL28:
 123:Core/Src/main.c **** 
 356              		.loc 1 123 9 view .LVU95
 357 0032 6421     		movs	r1, #100
 358 0034 0120     		movs	r0, #1
 359 0036 FFF7FEFF 		bl	blink_led
 360              	.LVL29:
 125:Core/Src/main.c ****           // we still have something connected so try and initialize it
 361              		.loc 1 125 9 view .LVU96
 125:Core/Src/main.c ****           // we still have something connected so try and initialize it
 362              		.loc 1 125 13 is_stmt 0 view .LVU97
 363 003a FFF7FEFF 		bl	read_pres_pin
 364              	.LVL30:
 125:Core/Src/main.c ****           // we still have something connected so try and initialize it
 365              		.loc 1 125 12 view .LVU98
 366 003e 0028     		cmp	r0, #0
 367 0040 18D1     		bne	.L27
 135:Core/Src/main.c ****         }
 368              		.loc 1 135 11 is_stmt 1 view .LVU99
 135:Core/Src/main.c ****         }
 369              		.loc 1 135 21 is_stmt 0 view .LVU100
 370 0042 234B     		ldr	r3, .L28
 371 0044 0022     		movs	r2, #0
 372 0046 1A70     		strb	r2, [r3]
 373              	.L21:
 184:Core/Src/main.c ****     /* USER CODE END WHILE */
 374              		.loc 1 184 5 is_stmt 1 view .LVU101
 375 0048 0A20     		movs	r0, #10
 376 004a FFF7FEFF 		bl	HAL_Delay
 377              	.LVL31:
 109:Core/Src/main.c ****   {
 378              		.loc 1 109 9 view .LVU102
 379              	.L26:
 109:Core/Src/main.c ****   {
 380              		.loc 1 109 3 view .LVU103
 111:Core/Src/main.c ****       case WAITING: {
 381              		.loc 1 111 5 view .LVU104
 382 004e 204B     		ldr	r3, .L28
 383 0050 1B78     		ldrb	r3, [r3]
 384 0052 012B     		cmp	r3, #1
 385 0054 E6D0     		beq	.L19
 386 0056 022B     		cmp	r3, #2
 387 0058 19D0     		beq	.L20
 388 005a 002B     		cmp	r3, #0
 389 005c F4D1     		bne	.L21
 113:Core/Src/main.c ****         if (read_pres_pin()) {
 390              		.loc 1 113 9 view .LVU105
 391 005e 0020     		movs	r0, #0
 392 0060 FFF7FEFF 		bl	write_led
 393              	.LVL32:
 114:Core/Src/main.c ****           dev_state = PRESENCE_DETECTED;
 394              		.loc 1 114 9 view .LVU106
 114:Core/Src/main.c ****           dev_state = PRESENCE_DETECTED;
ARM GAS  /tmp/ccuGbnkP.s 			page 18


 395              		.loc 1 114 13 is_stmt 0 view .LVU107
 396 0064 FFF7FEFF 		bl	read_pres_pin
 397              	.LVL33:
 114:Core/Src/main.c ****           dev_state = PRESENCE_DETECTED;
 398              		.loc 1 114 12 view .LVU108
 399 0068 0028     		cmp	r0, #0
 400 006a EDD0     		beq	.L21
 115:Core/Src/main.c ****         }
 401              		.loc 1 115 11 is_stmt 1 view .LVU109
 115:Core/Src/main.c ****         }
 402              		.loc 1 115 21 is_stmt 0 view .LVU110
 403 006c 184B     		ldr	r3, .L28
 404 006e 0122     		movs	r2, #1
 405 0070 1A70     		strb	r2, [r3]
 406 0072 E9E7     		b	.L21
 407              	.L27:
 408              	.LBB6:
 127:Core/Src/main.c ****         
 409              		.loc 1 127 11 is_stmt 1 view .LVU111
 127:Core/Src/main.c ****         
 410              		.loc 1 127 38 is_stmt 0 view .LVU112
 411 0074 1748     		ldr	r0, .L28+4
 412 0076 FFF7FEFF 		bl	nunchuk_init
 413              	.LVL34:
 129:Core/Src/main.c ****             indicate_nunchuk_type(nunchuk_type);
 414              		.loc 1 129 11 is_stmt 1 view .LVU113
 129:Core/Src/main.c ****             indicate_nunchuk_type(nunchuk_type);
 415              		.loc 1 129 14 is_stmt 0 view .LVU114
 416 007a 0028     		cmp	r0, #0
 417 007c E4D1     		bne	.L21
 130:Core/Src/main.c ****             dev_state = CONNECTED;
 418              		.loc 1 130 13 is_stmt 1 view .LVU115
 419 007e 154B     		ldr	r3, .L28+4
 420 0080 1878     		ldrb	r0, [r3]
 421              	.LVL35:
 130:Core/Src/main.c ****             dev_state = CONNECTED;
 422              		.loc 1 130 13 is_stmt 0 view .LVU116
 423 0082 FFF7FEFF 		bl	indicate_nunchuk_type
 424              	.LVL36:
 131:Core/Src/main.c ****           }
 425              		.loc 1 131 13 is_stmt 1 view .LVU117
 131:Core/Src/main.c ****           }
 426              		.loc 1 131 23 is_stmt 0 view .LVU118
 427 0086 124B     		ldr	r3, .L28
 428 0088 0222     		movs	r2, #2
 429 008a 1A70     		strb	r2, [r3]
 430 008c DCE7     		b	.L21
 431              	.LVL37:
 432              	.L20:
 131:Core/Src/main.c ****           }
 433              		.loc 1 131 23 view .LVU119
 434              	.LBE6:
 140:Core/Src/main.c **** 
 435              		.loc 1 140 9 is_stmt 1 view .LVU120
 436 008e 0120     		movs	r0, #1
 437 0090 FFF7FEFF 		bl	write_led
 438              	.LVL38:
ARM GAS  /tmp/ccuGbnkP.s 			page 19


 143:Core/Src/main.c ****           dev_state = WAITING;
 439              		.loc 1 143 9 view .LVU121
 143:Core/Src/main.c ****           dev_state = WAITING;
 440              		.loc 1 143 14 is_stmt 0 view .LVU122
 441 0094 FFF7FEFF 		bl	read_pres_pin
 442              	.LVL39:
 143:Core/Src/main.c ****           dev_state = WAITING;
 443              		.loc 1 143 12 view .LVU123
 444 0098 0028     		cmp	r0, #0
 445 009a 04D1     		bne	.L23
 144:Core/Src/main.c ****           nunchuk_type = UNKNOWN;
 446              		.loc 1 144 11 is_stmt 1 view .LVU124
 144:Core/Src/main.c ****           nunchuk_type = UNKNOWN;
 447              		.loc 1 144 21 is_stmt 0 view .LVU125
 448 009c 0C4B     		ldr	r3, .L28
 449 009e 0022     		movs	r2, #0
 450 00a0 1A70     		strb	r2, [r3]
 145:Core/Src/main.c ****         }
 451              		.loc 1 145 11 is_stmt 1 view .LVU126
 145:Core/Src/main.c ****         }
 452              		.loc 1 145 24 is_stmt 0 view .LVU127
 453 00a2 0C4B     		ldr	r3, .L28+4
 454 00a4 1A70     		strb	r2, [r3]
 455              	.L23:
 148:Core/Src/main.c ****           case STANDARD: {
 456              		.loc 1 148 9 is_stmt 1 view .LVU128
 457 00a6 0B4B     		ldr	r3, .L28+4
 458 00a8 1B78     		ldrb	r3, [r3]
 459 00aa 022B     		cmp	r3, #2
 460 00ac 0BD0     		beq	.L24
 461 00ae 032B     		cmp	r3, #3
 462 00b0 05D0     		beq	.L25
 463 00b2 012B     		cmp	r3, #1
 464 00b4 C8D1     		bne	.L21
 465              	.LBB7:
 150:Core/Src/main.c ****             nunchuk_read_standard(&report);
 466              		.loc 1 150 13 discriminator 2 view .LVU129
 151:Core/Src/main.c **** 
 467              		.loc 1 151 13 discriminator 2 view .LVU130
 468 00b6 6846     		mov	r0, sp
 469 00b8 FFF7FEFF 		bl	nunchuk_read_standard
 470              	.LVL40:
 471              	.LBE7:
 156:Core/Src/main.c ****           case CLASSIC: {
 472              		.loc 1 156 11 discriminator 2 view .LVU131
 473 00bc C4E7     		b	.L21
 474              	.L25:
 475              	.LBB8:
 158:Core/Src/main.c ****             nunchuk_read_classic(&report);
 476              		.loc 1 158 13 discriminator 4 view .LVU132
 159:Core/Src/main.c **** 
 477              		.loc 1 159 13 discriminator 4 view .LVU133
 478 00be 6846     		mov	r0, sp
 479 00c0 FFF7FEFF 		bl	nunchuk_read_classic
 480              	.LVL41:
 481              	.LBE8:
 164:Core/Src/main.c ****           case GUITAR_HERO: {
ARM GAS  /tmp/ccuGbnkP.s 			page 20


 482              		.loc 1 164 11 discriminator 4 view .LVU134
 483 00c4 C0E7     		b	.L21
 484              	.L24:
 485              	.LBB9:
 166:Core/Src/main.c ****             nunchuk_read_guitar_hero(&report);
 486              		.loc 1 166 13 discriminator 3 view .LVU135
 167:Core/Src/main.c **** 
 487              		.loc 1 167 13 discriminator 3 view .LVU136
 488 00c6 6846     		mov	r0, sp
 489 00c8 FFF7FEFF 		bl	nunchuk_read_guitar_hero
 490              	.LVL42:
 171:Core/Src/main.c ****           }
 491              		.loc 1 171 13 discriminator 3 view .LVU137
 171:Core/Src/main.c ****           }
 492              		.loc 1 171 13 is_stmt 0 discriminator 3 view .LVU138
 493              	.LBE9:
 173:Core/Src/main.c ****           case UNKNOWN:
 494              		.loc 1 173 11 is_stmt 1 discriminator 3 view .LVU139
 495 00cc BCE7     		b	.L21
 496              	.L29:
 497 00ce C046     		.align	2
 498              	.L28:
 499 00d0 00000000 		.word	dev_state
 500 00d4 00000000 		.word	nunchuk_type
 501              		.cfi_endproc
 502              	.LFE362:
 504              		.global	nunchuk_type
 505              		.section	.bss.nunchuk_type,"aw",%nobits
 508              	nunchuk_type:
 509 0000 00       		.space	1
 510              		.global	dev_state
 511              		.section	.bss.dev_state,"aw",%nobits
 514              	dev_state:
 515 0000 00       		.space	1
 516              		.text
 517              	.Letext0:
 518              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 519              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 520              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 521              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 522              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 523              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 524              		.file 9 "Middlewares/nunchuk/Inc/nunchuk_devices.h"
 525              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 526              		.file 11 "Middlewares/nunchuk/Inc/nunchuk.h"
 527              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 528              		.file 13 "Core/Inc/gpio.h"
 529              		.file 14 "USB_Device/App/usb_device.h"
 530              		.file 15 "Core/Inc/i2c.h"
 531              		.file 16 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 532              		.file 17 "<built-in>"
ARM GAS  /tmp/ccuGbnkP.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccuGbnkP.s:19     .text.indicate_nunchuk_type:0000000000000000 $t
     /tmp/ccuGbnkP.s:25     .text.indicate_nunchuk_type:0000000000000000 indicate_nunchuk_type
     /tmp/ccuGbnkP.s:94     .text.Error_Handler:0000000000000000 $t
     /tmp/ccuGbnkP.s:100    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuGbnkP.s:132    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccuGbnkP.s:138    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccuGbnkP.s:297    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccuGbnkP.s:302    .text.main:0000000000000000 $t
     /tmp/ccuGbnkP.s:308    .text.main:0000000000000000 main
     /tmp/ccuGbnkP.s:499    .text.main:00000000000000d0 $d
     /tmp/ccuGbnkP.s:514    .bss.dev_state:0000000000000000 dev_state
     /tmp/ccuGbnkP.s:508    .bss.nunchuk_type:0000000000000000 nunchuk_type
     /tmp/ccuGbnkP.s:509    .bss.nunchuk_type:0000000000000000 $d
     /tmp/ccuGbnkP.s:515    .bss.dev_state:0000000000000000 $d

UNDEFINED SYMBOLS
blink_led
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
MX_USB_Device_Init
HAL_Delay
read_pres_pin
write_led
nunchuk_init
nunchuk_read_standard
nunchuk_read_classic
nunchuk_read_guitar_hero
